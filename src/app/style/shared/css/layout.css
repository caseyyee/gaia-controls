/* 
layout.css 

Layout rules divides a page into sections. Layouts hold one or more modules together.

All layout definitions are prefixed with "l-".
*/


/*
HELPERS
===================
*/

.l-clearfix:after {
    content: "";
    display: table;
    clear: both;
}


/*
GRID
===================

This only handles horizontal atm.    Could possibly require more extensible solution.
*/
.grid {
}
.grid:after { 
  /* clearfix */
  content: "";
  display: table;
  clear: both;
}

[class*='col-'] {
  float: left;
}

/* 2 col */
.col-1-2 {
    width: 50%;
}

/* 3 col */
.col-1-3 {
  width: 33.33%;
}
.col-2-3 {
  width: 66.66%;
}

/* 4 col */
.col-1-4 {
    width: 25%;
}
.col-2-4 {
   width: 50%;
}
.col-3-4 {
  width: 75%;
}

/*
ALIGNMENT
===================
*/

.l-align-right {
    float: right;
}
.l-align-left {
    float: left;
}
.l-align-center {
    text-align: center;
}



/*
APP LAYOUTS
===================
*/

.l-app {
  display: flex;
  flex-direction: column;
  height: 100%;
}
.l-app-content {
   display: flex;
  flex: 1 1 0%;
  overflow: auto;
}

/*
SPACING
===================
margins and columns.
specify in a single dimension only for calrity.

naming syntax:
[m = margin, b = border][t = top, r = right, b = bottom, l = left]


*/
.l-mb60 {
    margin-bottom: var(--dim-mega);
}
.l-p16 {
  padding: var(--dim-small);
}
.l-plr16 {
   padding-left: var(--dim-small); 
   padding-right: var(--dim-small); 
}
.l-tb16 {
  padding-top: var(--dim-small); 
  padding-bottom: var(--dim-small); 
}